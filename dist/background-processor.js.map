{"version":3,"file":"background-processor.js","sourceRoot":"","sources":["../src/background-processor.ts"],"names":[],"mappings":"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","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\n\n// public\nexport class BackgroundProcessor\n{\n    private readonly _intervalMilliseconds: number;\n    private readonly _actionsToProcess: Array<Action> = new Array<Action>();\n    private _isDisposed: boolean = false;\n\n\n    public constructor(intervalMilliseconds: number = 500)\n    {\n        given(intervalMilliseconds, \"intervalMilliseconds\").ensureHasValue().ensureIsNumber().ensure(t => t > 0);\n\n        this._intervalMilliseconds = intervalMilliseconds;\n\n        this.initiateBackgroundProcessing();\n    }\n\n\n    public processAction(action: () => void): void\n    {\n        given(action, \"action\").ensureHasValue().ensureIsFunction();\n\n        this._actionsToProcess.push(new Action(action));\n    }\n\n\n    public processAsyncAction(asyncAction: () => Promise<void>): void\n    {\n        given(asyncAction, \"asyncAction\").ensureHasValue().ensureIsFunction();\n\n        this._actionsToProcess.push(new Action(asyncAction, true));\n    }\n\n    public dispose(): void\n    {\n        this._isDisposed = true;\n    }\n\n\n    private initiateBackgroundProcessing()\n    {\n        if (this._isDisposed)\n            return;\n\n        setTimeout(() =>\n        {\n            if (this._actionsToProcess.length > 0)\n            {\n                const action = this._actionsToProcess.shift();\n                action.execute(() =>\n                {\n                    this.initiateBackgroundProcessing();\n                });\n            }\n            else\n            {\n                this.initiateBackgroundProcessing();\n            }\n        }, this._intervalMilliseconds);\n    }\n}\n\n\nclass Action\n{\n    private readonly _action: Function;\n    private readonly _isAsync: boolean;\n\n\n    public constructor(action: Function, isAsync: boolean = false)\n    {\n        given(action, \"action\").ensureHasValue().ensureIsFunction();\n\n        this._action = action;\n        this._isAsync = !!isAsync;\n    }\n\n\n    public execute(postExecuteCallback: () => void): void\n    {\n        given(postExecuteCallback, \"postExecuteCallback\").ensureHasValue().ensureIsFunction();\n\n        if (this._isAsync)\n        {\n            try \n            {\n                this._action()\n                    .then(() =>\n                    {\n                        postExecuteCallback();\n                    })\n                    .catch((error: any) =>\n                    {\n                        console.log(error);\n                        postExecuteCallback();\n                    });\n            }\n            catch (error)\n            {\n                console.log(error);\n                postExecuteCallback();\n            }\n        }\n        else\n        {\n            try \n            {\n                this._action();\n            }\n            catch (error)\n            {\n                console.log(error);\n            }\n\n            postExecuteCallback();\n        }\n    }\n}"]}